-- 1 -- Handle nulls 
UPDATE stolen_vehicles
SET 
	vehicle_type = COALESCE(vehicle_type, 'Unknown'), 
	vehicle_desc = COALESCE(vehicle_desc, 'Unknown'),
	color = COALESCE(color, 'Unknown')
WHERE 
	vehicle_type IS NULL OR 
	vehicle_desc IS NULL OR
	color IS NULL;

-- 2 -- Removing Duplicates
WITH duplicates AS (
    SELECT vehicle_id, vehicle_type, make_id, model_year, vehicle_desc, color, date_stolen, location_id,
            ROW_NUMBER() OVER(
                PARTITION BY vehicle_type, make_id, model_year, vehicle_desc, color, date_stolen, location_id 
                ORDER BY vehicle_id) as row_num
    FROM stolen_vehicles
)
DELETE FROM duplicates
WHERE row_num > 1;

-- 3 -- Correcting data values typos
-- Incorrect make name Toyota Lexus, Landrover

UPDATE stolen_vehicles
SET make_id = CASE
	WHEN make_id = '620' THEN '570'
	WHEN make_id = '569' THEN '568'
END
WHERE make_id IN ('620', '569');

-- Change to the correct make_id then remove the incorrect records from make_details
DELETE FROM make_details
WHERE make_id = '569' OR make_id = '620';

-- 4 -- Remove irreverent columns and records
-- Remove incidents that have nulls values for make_id

DELETE FROM stolen_vehicles
WHERE make_id IS NULL;

-- Removing vehicle_desc columns
ALTER TABLE stolen_vehicles
DROP COLUMN vehicles;

-- Standardising data formats
UPDATE locations
SET density = ROUND(density, 1);

-- 5 -- Computing vehicle age before it got stolen
ALTER TABLE stolen_vehicles
ADD age INT;

UPDATE stolen_vehicles
SET age = YEAR(date_stolen) - model_year;
